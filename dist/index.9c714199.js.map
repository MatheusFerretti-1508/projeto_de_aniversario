{"mappings":"AAAAA,SAASC,iBAAiB,oBAAoB,SAASC,GACnD,MACMC,EADe,IAAIC,KAAM,wBACQC,UACjCC,EAAQN,SAASO,eAAe,YAEtCC,aAAa,WACT,IACIC,GADa,IAAIL,MACYC,UAE7BK,EAAaP,EAAoBM,EAEjCE,EAAiBC,KAAKC,MAAMH,EAAa,OACzCI,EAAiBF,KAAKC,MAAMH,EAAc,MAAY,MACtDK,EAAgBH,KAAKC,MAAMH,EAAe,MAAY,KAAW,KACjEM,EAAgBJ,KAAKC,MAAMH,EAAgB,MAAY,KAAW,IAAS,KAE/EJ,EAAMW,UAAY,GAAGN,MAAmBG,MAAmBC,MAAkBC,IACjF,GAAG,IACP","sources":["src/main.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', function(e) {\r\n    const dataDoEvento = new Date ('2023 Oct 15 14:00:00') /*Definindo data do evento*/\r\n    const timeStampDoEvento = dataDoEvento.getTime(); /*Coletando timeStamp do evento*/\r\n    const timer = document.getElementById('contador') /*Coletando o local do timer no HTML*/\r\n    \r\n    setInterval (function() { /*Definindo uma atualização por segundo*/\r\n        let dataDeHoje = new Date () /*Coletando a data do dia atual*/\r\n        let timeStampDeHoje = dataDeHoje.getTime(); /*Coletando o timeStamp do dia atual*/\r\n\r\n        let untilEvent = timeStampDoEvento - timeStampDeHoje /*Coletando o timeStamp até o evento*/\r\n        \r\n        let daysUntilEvent = Math.floor(untilEvent / 86400000)\r\n        let hourUntilEvent = Math.floor((untilEvent % 86400000) / 3600000)\r\n        let minUntilEvent = Math.floor(((untilEvent % 86400000) % 3600000) / 60000)\r\n        let secUntilEvent = Math.floor((((untilEvent % 86400000) % 3600000) % 60000) / 1000)\r\n        \r\n        timer.innerHTML = `${daysUntilEvent}d ${hourUntilEvent}h ${minUntilEvent}m ${secUntilEvent}s`\r\n    }, 1000)\r\n})"],"names":["document","addEventListener","e","timeStampDoEvento","Date","getTime","timer","getElementById","setInterval","timeStampDeHoje","untilEvent","daysUntilEvent","Math","floor","hourUntilEvent","minUntilEvent","secUntilEvent","innerHTML"],"version":3,"file":"index.9c714199.js.map"}